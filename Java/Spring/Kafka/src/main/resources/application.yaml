kafka:
  bootstrapService: localhost:9092
  producer:
    topic: paTopic-local
    groupId: test-group
    blockTimeMs: 2000 # default 60000
    requestTimeout: 500
    batchSize: 16384 # default 16384
    lingerMs: 10 # default 0
    maxRequestSize: 1048576 # default 1024 * 1024
    bufferMemory: 33554432 # default 32 * 1024 * 1024 (33554432)
    retries: 0 # default 0
    offsetsCommitRequiredAcks: -1 # default 1. ВАЖНО!!! В какое количество реплик запишется сообщение чтобы считаться успешно записанным
  consumer:
    topic: paTopic-local
    groupId: test-group3
    enableAutoCommit: false
    autoCommitIntervalMs: 500
    sessionTimeoutMs: 30000
    pollTimeoutMs: 500 # default 1000. Максимальное время ожидания при получении сообщений
    maxPollIntervalMs: 30000 # default 300000. ВАЖНО!! Максимальное время между считыванием сообщений (poll()). Если за это время не успеть обработать сообщения, то Consumer считается мертвым и происходит перебалансировка
    threads: 10
    maxPollRecords: 500 # default 500. Максимальное количество сообщений считываемое за раз
    heartbeatIntervalMs: 3000 # default 3000
    autoOffsetReset: earliest # default latest. С какого смещения читать сообщения, если для группы потребителей в кафка не указано последнее смещение
    isBatchListener: true
    ackOnError: true
    ackMode: BATCH
  security:
    kerberos:
      enabled: false
      protocol: SASL_PLAINTEXT
      serviceName: kafka
    ssl:
      enabled: false
      security.protocol: SSL
      truststore:
        location: kafka.jks
        password: password
      keystore:
        location: kafka.jks
        password: password
      key.password: password

