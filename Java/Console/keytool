https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html


keytool -import -trustcacerts -keystore "$JAVA_HOME/jre/lib/security/cacerts" -noprompt -storepass changeit -alias <алиас для сертификата> -import -file <путь к сертификату>
    Добавление сертификатов в cacerts (доверенные сертификаты java)


keytool -genkey -dname "cn=CLIENT" -alias <имя сертификата в keystore> -keyalg RSA -keystore <имя файла keystore.jks> -keypass <пароль для защиты закрытого ключа> -storepass <пароль для защиты хранилища>
    Сгенерировать ключ и сертификат


keytool -genkeypair -keyalg RSA -keysize 2048 -alias stackoverflow -dname "CN=stackoverflow,OU=Hakan,O=Hakan,C=NL" -ext "SAN:c=DNS:localhost,IP:127.0.0.1" -validity 3650 -keystore identity.jks -storepass secret -keypass secret -deststoretype pkcs12
    Сгенерировать ключ и сертификат одной командой


keytool -import -keystore <путь до файла keystore.jks> -file <путь до сертификата> -alias <имя сертификата в keystore>
    Загрузить в keystore.jks доверенный сертификат


keytool -list -v -keystore <путь до файла keystore>
   Посмотреть содержимое keystore
   -v - подробная информация


keytool -export -keystore <путь к keystore> -alias <имя сертификата в jks> -file <имя выгруженного сертификата>.cer
    Выгрузить сертификат из keystore


keytool -certreq -alias <alias> -keystore <keystore>.jks -file <file>.csr -sigalg SHA256WithRSA
    Запрос на подпись сертификата в удостоверяющем центре

keytool -importkeystore -srckeystore keystore.jks -srcstoretype JKS -deststoretype PKCS12 -destkeystore keystore.p12
    Перевести формат из jks в p12

keytool -importkeystore -srckeystore {SOURCE_KEYSTORE.p12} -srcstoretype pkcs12 -srcstorepass {PASSWORD} -destkeystore {DESTINATION_KEYSTORE.p2} -deststoretype pkcs12 -deststorepass {PASSWORD}
    Из одного p12 импортнуть сертификаты в другой

==============================================================================================

Пример создания хранилища jks без SAN (Subject Alternative Names)

1.     Сформировать хранилище ключей:
keytool -genkey -alias {name} -keyalg RSA -keysize 2048 -keystore keystore.jks

2.     Далее вас будет предложено ввести пароль и информацию об организации
a.     Enter keystore password: {ваш_пароль}
b.     Re-enter new password: {ваш_пароль}
c.     What is your first and last name?: {ваш_CN}
d.     What is the name of your organizational unit?: 00CA
e.     What is the name of your organization?: Bank
f.     What is the name of your City or Locality?: Moscow
g.     What is the name of your State or Province?: Moscow
h.     What is the two-letter country code for this unit?: RU

3.     Сгенерировать запрос на выпуск сертификата:
keytool -certreq -keyalg RSA -alias {name} -file {name}.csr -keystore {name}.jks

4.     Полученные сертификаты необходимо импортировать в хранилище. Важно сначала импортировать все доверенные сертификаты (Root, CA).
Для 2-х хранилищ:
a.     keytool -v -importcert -keystore truststore.jks -alias {Root} -file {Root}.crt
b.     keytool -v -importcert -keystore truststore.jks -alias {CA} -file {CA}.crt
c.     keytool -v -importcert -keystore keystore.jks -alias {name} -file {name}.cer

Для единого хранилища:
d.     keytool -v -importcert -keystore keystore.jks -alias {Root} -file {Root}.crt
e.     keytool -v -importcert -keystore keystore.jks -alias {CA} -file {CA}.crt
f.     keytool -v -importcert -keystore keystore.jks -alias {name} -file {name}.cer

где: {Root} алиас корневого сертификат;  {CA} - алиас промежуточного сертификат; {name} алиас подписанного сертификата; {name} - имя файла сертификата

==============================================================================================

Пример создания хранилища jks c SAN (Subject Alternative Names)

1.     Сформировать хранилище ключей:
keytool -genkeypair -alias ${ваш_алиас} -keyalg RSA -sigalg SHA256withRSA -dname "CN=${ваш_CN}, OU=00CA, O=Bank, C=RU" \
-ext SAN=dns:localhost,dns:${ваше_имя_сервера},ip:127.0.0.1 \
-keystore ${имя_Jks}.jks -storetype JKS -storepass ваш_пароль -validity 1440 -keysize 2048 -keyalg RSA;

или

keytool -keystore server.jks -storepass protected -deststoretype pkcs12 -genkeypair -keyalg RSA -validity 365 -dname "CN=10.100.0.1," -ext "SAN=IP:10.100.0.1"

2.     Сгенерировать запрос на выпуск сертификата:
keytool -certreq -keyalg RSA -alias {name} -file {name}.csr -keystore {name}.jks

3.     Полученные сертификаты необходимо импортировать в хранилище. Важно сначала импортировать все доверенные сертификаты (Root, CA).
Для 2-х хранилищ:
a.     keytool -v -importcert -keystore truststore.jks -alias {Root} -file {Root}.crt
b.     keytool -v -importcert -keystore truststore.jks -alias {CA} -file {CA}.crt
c.     keytool -v -importcert -keystore keystore.jks -alias {name} -file {name}.cer

Для единого хранилища:

d.     keytool -v -importcert -keystore keystore.jks -alias {Root} -file {Root}.crt
e.     keytool -v -importcert -keystore keystore.jks -alias {CA} -file {CA}.crt
f.     keytool -v -importcert -keystore keystore.jks -alias {name} -file {name}.cer

где: {Root} алиас корневого сертификат;  {CA} - алиас промежуточного сертификат; {name} алиас подписанного сертификата; {name} - имя файла сертификата

==============================================================================================