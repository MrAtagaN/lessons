установка minikube и kubectl https://www.youtube.com/watch?v=WAIrMmCQ3hE&list=PLg5SS_4L6LYvN1RqaVesof8KAf-02fJSi&index=2

Место хранения настроек и конфигурации:

Users/%USERNAME%/.kube - конфиг kubectl c kubernates cluster
Users/%USERNAME%/.minikube - файлы ISO и другие для создания VM


утилита kubectl - для управления кубернейт кластером

утилита minikube - для создания кубернейт кластера, состоящего из одного сервера (nod),
    для создания кластера можно использовать средства виртуализации virtualbox, docker или другие

Главные объекты в Kubernates

Pod - состоит из 1 или нескольких docker контейнеров
Deployment - состоит из 1 или нескольких одинаковых Pod
Service - даёт доступ к Deployment
Nodes - сервера
Cluster - объединение Nodes

replicationcontrollers - контроллер репликаций (deprecated) ( создаёт и поддерживает заданной количество pod и другое )
    контроллер репликаций создаёт поды с именем <имя контроллера репликаций> + рандомный суффикс,
    отслеживает поды делая селект по меткам, селектор меток можно посмотреть в описании контроллера репликаций
    тэг Labels: <ключ=значение>.
    Можно добавлять или удалять поды из под контроля добавляя или удаляя метки у подов

replicaSet - улучшенная версия контроллера репликаций, в селекторе меток по которым replicaSet будет отслеживать поды
    можно указавать различные выражения, что даёт более гибкий подход

daemonSet - создаёт под на каждом узле, если у узла есть указанная метка (удаляет под если убрать у узла метку)

job - создаёт под/поды которые выполняется один раз и завершает свою работу, но не удаляется. В декларации yaml можно
    указывать количество таких заданий которое надо выполнить, количество рестартов если задание не было выполнено,
    лимит времени на задание, количество параллельно выполняемых заданий

cronJob - создаёт  запускает под по расписанию

PersistentVolume - объект сохранения информации на диске, он относится к настройкам самого кластера,
    он зависит от файловой системы кластера, модули при сохранении информации ничего не будут знать о том на кластере с
    какой файловой системой они запущены, модули декларативно запрашивают место для записи с помощью заявки
    PersistentVolumeClaim, можно напрямую обращаться к PersistentVolume без заявки, но это не рекомендуется

StorageClass - объект который автоматически создаёт PersistentVolume по заявке, в кластере есть изначально StorageClass
    по умолчанию, но можно создать свой StorageClass, в заявке (PersistentVolumeClaim) если не указан конкретный StorageClass
    то используется по уполчанию, для использования конкретного StorageClass пишем строку storageClassName: 'имя стораджа'

labels - метки, представляют собой map (ключ - значение) которая нужна для выборки объектов,
    метки могут проставлятся любым объектам

аннотации - информация об объекте в формате map (ключ - значение)